/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'

// Create Virtual Routes

const TraitsLazyImport = createFileRoute('/traits')()
const ThanksLazyImport = createFileRoute('/thanks')()
const SignupLazyImport = createFileRoute('/signup')()
const ProfileLazyImport = createFileRoute('/profile')()
const InspirationLazyImport = createFileRoute('/inspiration')()
const CharacterLazyImport = createFileRoute('/character')()
const BugReportLazyImport = createFileRoute('/bug-report')()
const AttacksLazyImport = createFileRoute('/attacks')()
const IndexLazyImport = createFileRoute('/')()

// Create/Update Routes

const TraitsLazyRoute = TraitsLazyImport.update({
  path: '/traits',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/traits.lazy').then((d) => d.Route))

const ThanksLazyRoute = ThanksLazyImport.update({
  path: '/thanks',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/thanks.lazy').then((d) => d.Route))

const SignupLazyRoute = SignupLazyImport.update({
  path: '/signup',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/signup.lazy').then((d) => d.Route))

const ProfileLazyRoute = ProfileLazyImport.update({
  path: '/profile',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/profile.lazy').then((d) => d.Route))

const InspirationLazyRoute = InspirationLazyImport.update({
  path: '/inspiration',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/inspiration.lazy').then((d) => d.Route))

const CharacterLazyRoute = CharacterLazyImport.update({
  path: '/character',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/character.lazy').then((d) => d.Route))

const BugReportLazyRoute = BugReportLazyImport.update({
  path: '/bug-report',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/bug-report.lazy').then((d) => d.Route))

const AttacksLazyRoute = AttacksLazyImport.update({
  path: '/attacks',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/attacks.lazy').then((d) => d.Route))

const IndexLazyRoute = IndexLazyImport.update({
  path: '/',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/index.lazy').then((d) => d.Route))

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexLazyImport
      parentRoute: typeof rootRoute
    }
    '/attacks': {
      id: '/attacks'
      path: '/attacks'
      fullPath: '/attacks'
      preLoaderRoute: typeof AttacksLazyImport
      parentRoute: typeof rootRoute
    }
    '/bug-report': {
      id: '/bug-report'
      path: '/bug-report'
      fullPath: '/bug-report'
      preLoaderRoute: typeof BugReportLazyImport
      parentRoute: typeof rootRoute
    }
    '/character': {
      id: '/character'
      path: '/character'
      fullPath: '/character'
      preLoaderRoute: typeof CharacterLazyImport
      parentRoute: typeof rootRoute
    }
    '/inspiration': {
      id: '/inspiration'
      path: '/inspiration'
      fullPath: '/inspiration'
      preLoaderRoute: typeof InspirationLazyImport
      parentRoute: typeof rootRoute
    }
    '/profile': {
      id: '/profile'
      path: '/profile'
      fullPath: '/profile'
      preLoaderRoute: typeof ProfileLazyImport
      parentRoute: typeof rootRoute
    }
    '/signup': {
      id: '/signup'
      path: '/signup'
      fullPath: '/signup'
      preLoaderRoute: typeof SignupLazyImport
      parentRoute: typeof rootRoute
    }
    '/thanks': {
      id: '/thanks'
      path: '/thanks'
      fullPath: '/thanks'
      preLoaderRoute: typeof ThanksLazyImport
      parentRoute: typeof rootRoute
    }
    '/traits': {
      id: '/traits'
      path: '/traits'
      fullPath: '/traits'
      preLoaderRoute: typeof TraitsLazyImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export const routeTree = rootRoute.addChildren({
  IndexLazyRoute,
  AttacksLazyRoute,
  BugReportLazyRoute,
  CharacterLazyRoute,
  InspirationLazyRoute,
  ProfileLazyRoute,
  SignupLazyRoute,
  ThanksLazyRoute,
  TraitsLazyRoute,
})

/* prettier-ignore-end */

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/attacks",
        "/bug-report",
        "/character",
        "/inspiration",
        "/profile",
        "/signup",
        "/thanks",
        "/traits"
      ]
    },
    "/": {
      "filePath": "index.lazy.tsx"
    },
    "/attacks": {
      "filePath": "attacks.lazy.tsx"
    },
    "/bug-report": {
      "filePath": "bug-report.lazy.tsx"
    },
    "/character": {
      "filePath": "character.lazy.tsx"
    },
    "/inspiration": {
      "filePath": "inspiration.lazy.tsx"
    },
    "/profile": {
      "filePath": "profile.lazy.tsx"
    },
    "/signup": {
      "filePath": "signup.lazy.tsx"
    },
    "/thanks": {
      "filePath": "thanks.lazy.tsx"
    },
    "/traits": {
      "filePath": "traits.lazy.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
